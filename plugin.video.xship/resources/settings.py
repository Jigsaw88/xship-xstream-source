
import zlib, base64
exec(zlib.decompress(base64.b64decode(zlib.decompress(base64.b64decode('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')))).decode('utf-8'))
